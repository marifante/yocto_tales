name: Build linux images

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERFILE: ${{ github.workspace }}/docker/Dockerfile.yocto

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    outputs:
      image: ${{ steps.set-outputs.outputs.image }}

    steps:
      - name: 🌀 Checkout repository
        uses: actions/checkout@v4

      - name: 🌀 Determine if docker build is needed
        run: |

         if git diff --name-only HEAD^ HEAD | grep -q "${{ env.DOCKERFILE }}"; then
            echo "DOCKER_BUILD_NEEDED=true" >> $GITHUB_ENV
          else
            echo "DOCKER_BUILD_NEEDED=false" >> $GITHUB_ENV
          fi

      - name: 😎 Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📤 Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: 🔨 Build and push Docker image
        if: env.DOCKER_BUILD_NEEDED == 'true'
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ github.workspace }}/docker/Dockerfile.yocto

      - name: ✅ Create Job Outputs
        id: set-outputs
        run: |
          image="${{ steps.meta.outputs.tags }}"

          if [ ${DOCKER_BUILD_NEEDED} == "false" ]; then
          echo "DOCKER_BUILD_NEEDED is false, docker image creation was skipped. Using latest one: ${image}."
          else
            echo "DOCKER_BUILD_NEEDED is true, docker image was created and pushed. Pushed as ${image}."
          fi
          echo "image=${image}" >> "$GITHUB_OUTPUT"


  build-raspberry-pi-3-minimal:
    runs-on: ubuntu-latest
    needs: [build-and-push-docker-image]
    container:
      image: ${{ needs.build-and-push-docker-image.outputs.image }}

    steps:
      - name: 🌀 Verify container environment
        run: |
          echo "user: $(whoami)"
          echo "UID: $(id -u)"
          echo "GID: $(id -g)"

      - name: 🌀 Download config file
        run: |
          url="https://raw.githubusercontent.com/marifante/yocto_tales/${{ github.sha }}/configs/raspberry_py_3_minimal.yml"
          echo "Downloading config file from ${url}..."
          curl -o ${{ runner.temp }}/raspberry_py_3_minimal.yml "${url}"
          cat ${{ runner.temp }}/raspberry_pi_3_minimal.yml

      - name: 🔨 Build image
        run: |
          cd ${{ runner.temp }} && yoctales --config configs/raspberry_py_3_minimal.yml

      - name: ⬆️  Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: raspberry_pi_3_minimal
          path: work/raspberry_pi_3_minimal/build/tmp/deploy/images/
