name: Build linux images

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    outputs:
      image: ${{ steps.set-outputs.outputs.image }}

    steps:
      - name: 🌀 Checkout repository
        uses: actions/checkout@v4

      - name: 😎 Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📤 Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: 🔨 Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ github.workspace }}/docker/Dockerfile.yocto

      - name: ✅ Create Job Outputs
        id: set-outputs
        run: |
          image="${{ steps.meta.outputs.tags }}"
          echo "Created and pushed ${image} docker image!"
          echo "image=${image}" >> "$GITHUB_OUTPUT"

  build-raspberry-pi-3-minimal:
    runs-on: ubuntu-latest
    needs: [build-and-push-docker-image]
    container:
      image: ${{ needs.build-and-push-docker-image.outputs.image }}

    steps:
      - name: ㊙️ Setting up permissions for non-root user
        run: |
          runner_dirs=( "/__w/_temp/_runner_file_commands/" "/home/runner/work/_temp/_runner_file_commands" )

          for dir2mod in "${runner_dirs[@]}"; do
            echo "Modifying the permissions of ${dir2mod}"
            ls -lash ${dir2mod}

            mkdir -p ${dir2mod}
            sudo chown -R embeddev:embeddev ${dir2mod}

            echo "New permissions of ${dir2mod}"
            ls -lash ${dir2mod}
          done

      - name: 🌀 Checkout repository
        uses: actions/checkout@v4

      - name: 🔨 Build image
        run: |
          yoctales --config configs/raspberry_py_3_minimal.yml

      - name: ⬆️  Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: raspberry_pi_3_minimal
          path: work/raspberry_pi_3_minimal/build/tmp/deploy/images/
