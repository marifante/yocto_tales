name: Build linux images

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    outputs:
      image: ${{ steps.set-outputs.outputs.image }}

    steps:
      - name: üåÄ Checkout repository
        uses: actions/checkout@v4

      - name: üòé Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üì§ Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: üî® Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ github.workspace }}/docker/Dockerfile.yocto

      - name: ‚úÖ Create Job Outputs
        id: set-outputs
        run: |
          image="${{ steps.meta.outputs.tags }}"
          echo "Created and pushed ${image} docker image!"
          echo "image=${image}" >> "$GITHUB_OUTPUT"

  clone-repo:
    runs-on: ubuntu-latest

    steps:
      - name: üåÄ Checkout current repository (optional)
        uses: actions/checkout@v4

      - name: ‚¨ÜÔ∏è  Upload current repository as artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: current-repo
          path: |
            .git
            .

  build-zynq-image:
    runs-on: ubuntu-latest
    needs: [clone-repo, build-and-push-docker-image]
    container:
      image: ${{ needs.build-and-push-docker-image.outputs.image }}
      options: --user root

    steps:
      - name: ‚¨áÔ∏è  Download the artifact
        uses: actions/download-artifact@v4
        with:
          name: current-repo
          path: /home/embeddev/workspace/yocto_tales_repo

      - name: üåÄ Init yocto layers
        run: |
          cd /home/embeddev/workspace/yocto_tales_repo

          ls -lash

          echo "Initializing submodules..."
          git config --local url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "git@github.com:"
          git submodule update --init --recursive

      - name: üî® Build zynq image
        run: |
          cd /home/embeddev/workspace/yocto_tales_repo
          source /home/embeddev/setup_yocto_at_login
          setup_yocto -r https://github.com/Xilinx/yocto-manifests.git -t rel-v2023.2 -d $(pwd)
          cd build
          bitbake-layers add-layer bitbake-layers add-layer ../layers/meta-artyz7
          echo 'MACHINE = \"zynq-generic\"' >> conf/local.conf
          echo 'BB_NUMBER_THREADS = \"$(nproc)\"' >> conf/local.conf
          echo 'PARALLEL_MAKE = \"-j$(nproc)\"' >> conf/local.conf
          bitbake petalinux-image-minimal

      - name: ‚¨ÜÔ∏è  Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: BOOT.bin
          path: build/tmp/deploy/images/zynq-generic/boot.bin
